function gst = ur5FwdKin(q)
    % Input: 
    %   q: 6x1 joint space variable vector = [θ1, θ2, θ3, θ4, θ5, θ6].T, where θn is the angle of joint n for n = 1, · · · , 6.
    % Output: 
    %   gst: end effector pose, gst (4 × 4 matrix)

    th1 = q(1);
    th2 = q(2);
    th3 = q(3);
    th4 = q(4);
    th5 = q(5);
    th6 = q(6);
    
    l0 = 0.0892;
    l1 = 0.425; 
    l2 = 0.392; 
    l3 = 0.1093; 
    l4 = 0.09475; 
    l5 = 0.0825; 


    % Compute the forward kinematics matrix
    gst = [
        -cos(th6)*sin(th1)*sin(th5) + cos(th1)*(cos(th2+th3+th4)*cos(th5)*cos(th6) - sin(th2+th3+th4)*sin(th6)), ...
        -sin(th1)*sin(th5)*sin(th6) + cos(th1)*(cos(th6)*sin(th2+th3+th4) + cos(th2+th3+th4)*cos(th5)*sin(th6)), ...
        cos(th5)*sin(th1) + cos(th1)*cos(th2+th3+th4)*sin(th5), ...
        l3*(-1 + cos(th5))*sin(th1) - l0*cos(th1)*sin(th2) - (l0+l1)*cos(th1)*(-1 + cos(th3))*sin(th2) - ...
        (l0+l1)*cos(th1)*cos(th2)*sin(th3) + 2*(l0+l1+l2)*cos(th1)*sin(th2+th3)*sin(th4/2)^2 - ...
        (l0+l1+l2)*cos(th1)*cos(th2+th3)*sin(th4) + l3*cos(th1)*cos(th2+th3+th4)*sin(th5) - ...
        (l3+l5)*(cos(th5)*sin(th1) + cos(th1)*cos(th2+th3+th4)*sin(th5)) + ...
        2*(l0+l1+l2+l4)*cos(th1)*sin(th2+th3+th4)*sin(th6/2)^2 - ...
        (l0+l1+l2+l4)*(cos(th1)*cos(th2+th3+th4)*cos(th5) - sin(th1)*sin(th5))*sin(th6) + ...
        (23 + l0 + l4)*(-sin(th1)*sin(th5)*sin(th6) + cos(th1)*(cos(th6)*sin(th2+th3+th4) + cos(th2+th3+th4)*cos(th5)*sin(th6))), ...
        
        cos(th2+th3+th4)*cos(th5)*cos(th6)*sin(th1) + cos(th1)*cos(th6)*sin(th5) - sin(th1)*sin(th2+th3+th4)*sin(th6), ...
        cos(th6)*sin(th1)*sin(th2+th3+th4) + (cos(th2+th3+th4)*cos(th5)*sin(th1) + cos(th1)*sin(th5))*sin(th6), ...
        -cos(th1)*cos(th5) + cos(th2+th3+th4)*sin(th1)*sin(th5), ...
        -l3*cos(th1)*(-1 + cos(th5)) - l0*sin(th1)*sin(th2) - (l0+l1)*(-1 + cos(th3))*sin(th1)*sin(th2) - ...
        (l0+l1)*cos(th2)*sin(th1)*sin(th3) + 2*(l0+l1+l2)*sin(th1)*sin(th2+th3)*sin(th4/2)^2 - ...
        (l0+l1+l2)*cos(th2+th3)*sin(th1)*sin(th4) + l3*cos(th2+th3+th4)*sin(th1)*sin(th5) + ...
        (l3+l5)*(cos(th1)*cos(th5) - cos(th2+th3+th4)*sin(th1)*sin(th5)) + ...
        2*(l0+l1+l2+l4)*sin(th1)*sin(th2+th3+th4)*sin(th6/2)^2 - ...
        (l0+l1+l2+l4)*(cos(th2+th3+th4)*cos(th5)*sin(th1) + cos(th1)*sin(th5))*sin(th6) + ...
        (23 + l0 + l4)*(cos(th6)*sin(th1)*sin(th2+th3+th4) + (cos(th2+th3+th4)*cos(th5)*sin(th1) + cos(th1)*sin(th5))*sin(th6)), ...
        
        1/4*(2*sin(th2+th3+th4-th6) - sin(th2+th3+th4-th5-th6) - sin(th2+th3+th4+th5-th6) - ...
        2*sin(th2+th3+th4+th6) - sin(th2+th3+th4-th5+th6) - sin(th2+th3+th4+th5+th6)), ...
        1/4*(2*cos(th2+th3+th4-th6) - cos(th2+th3+th4-th5-th6) - cos(th2+th3+th4+th5-th6) + ...
        2*cos(th2+th3+th4+th6) + cos(th2+th3+th4-th5+th6) + cos(th2+th3+th4+th5+th6)), ...
        -sin(th2+th3+th4)*sin(th5), ...
        1/4*(4*l0 + 4*l1*cos(th2) + 4*l2*cos(th2+th3) + 4*l4*cos(th2+th3+th4) + ...
        2*l5*cos(th2+th3+th4-th5) - 2*l5*cos(th2+th3+th4+th5) + 46*cos(th2+th3+th4-th6) - ...
        2*l1*cos(th2+th3+th4-th6) - 2*l2*cos(th2+th3+th4-th6) - 23*cos(th2+th3+th4-th5-th6) + ...
        l1*cos(th2+th3+th4-th5-th6) + l2*cos(th2+th3+th4-th5-th6) - 23*cos(th2+th3+th4+th5-th6) + ...
        l1*cos(th2+th3+th4+th5-th6) + l2*cos(th2+th3+th4+th5-th6) + 46*cos(th2+th3+th4+th6) - ...
        2*l1*cos(th2+th3+th4+th6) - 2*l2*cos(th2+th3+th4+th6) + 23*cos(th2+th3+th4-th5+th6) - ...
        l1*cos(th2+th3+th4-th5+th6) - l2*cos(th2+th3+th4-th5+th6) + 23*cos(th2+th3+th4+th5+th6) - ...
        l1*cos(th2+th3+th4+th5+th6) - l2*cos(th2+th3+th4+th5+th6)), ...
        
        0, 0, 0, 1
    ];

end
